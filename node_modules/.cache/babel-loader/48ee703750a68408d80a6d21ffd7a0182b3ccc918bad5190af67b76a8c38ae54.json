{"ast":null,"code":"var _jsxFileName = \"/Users/jimquinn/Development/code/phase-2/phaseTwoProject/phase-2-lunchbox/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport '../App.css';\nimport NavBar from \"./NavBar\";\nimport About from \"./About\";\nimport FoodList from \"./FoodList\";\nimport AddFood from \"./AddFood\";\nimport PicnicBasket from \"./PicnicBasket\";\n\n/* Nodes Tree:\nApp\n|-NavBar - ( Home/PicnicBasket, AddFood, FoodList, About)\n|-FoodList\n|-PicnicBasket\n  |-FoodItem\n    |-LikesDislikes\n|-AddFood\n  |-FormInput\n  |-EmojiSelector\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [foods, setFoods] = useState(false);\n  const [clickedVotes, setClickedVotes] = useState([]);\n  const likedFoods = foods ? foods.filter(food => clickedVotes.includes(`${food.id}` + \"yum\")) : null;\n\n  //fetch to get initial set of foods data\n  useEffect(() => {\n    fetch(\"https://phase-2-lunchbox-data.onrender.com/foods\").then(resp => resp.json()).then(data => setFoods(data));\n  }, []);\n\n  //fetch to post new food to database + update PicnicBasket FoodItems + FoodList via state\n  function handleFormSubmit(newFoodObj) {\n    fetch(\"https://phase-2-lunchbox-data.onrender.com/foods\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(newFoodObj)\n    }).then(resp => resp.json()).then(data => setFoods([...foods, data]));\n  }\n\n  //Makes patch request to update likes/dislikes in database as well as state\n  function handleVote(foodId, patchedFoodObj, upOrDown) {\n    fetch(`https://phase-2-lunchbox-data.onrender.com/foods/${foodId}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(patchedFoodObj)\n    }).then(r => r.json()).then(data => {\n      const patchedFoods = foods.map(food => food.id === foodId ? data : food);\n      setFoods(patchedFoods);\n      //Uses a state controlled array held in App to determine whether \"Yum!\" and \"Ew!\" buttons have been clicked already so they don't re-render when PicnicBasket becomes unmounted then mounted again (need to refresh the page to reset clicked values)\n      const voteClickedAlready = clickedVotes.includes(foodId + upOrDown);\n      const filteredVotes = clickedVotes.filter(vote => vote !== foodId + upOrDown);\n      setClickedVotes(voteClickedAlready ? filteredVotes : [...clickedVotes, foodId + upOrDown]);\n      console.log(likedFoods);\n    });\n  }\n\n  //JSX to bundle components into App + provide routing for individual pages\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/addfood\",\n        children: /*#__PURE__*/_jsxDEV(AddFood, {\n          onFormSubmit: handleFormSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/foodlist\",\n        children: /*#__PURE__*/_jsxDEV(FoodList, {\n          foods: foods\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(PicnicBasket, {\n          foods: foods,\n          onVote: handleVote,\n          clickedVotes: clickedVotes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"404 not found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/pizza\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6f+76JptT4cOIwmFbcwLsagzPFc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Switch","Route","NavBar","About","FoodList","AddFood","PicnicBasket","App","foods","setFoods","clickedVotes","setClickedVotes","likedFoods","filter","food","includes","id","fetch","then","resp","json","data","handleFormSubmit","newFoodObj","method","headers","body","JSON","stringify","handleVote","foodId","patchedFoodObj","upOrDown","r","patchedFoods","map","voteClickedAlready","filteredVotes","vote","console","log"],"sources":["/Users/jimquinn/Development/code/phase-2/phaseTwoProject/phase-2-lunchbox/src/components/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport '../App.css';\nimport NavBar from \"./NavBar\";\nimport About from \"./About\";\nimport FoodList from \"./FoodList\";\nimport AddFood from \"./AddFood\";\nimport PicnicBasket from \"./PicnicBasket\";\n\n/* Nodes Tree:\nApp\n|-NavBar - ( Home/PicnicBasket, AddFood, FoodList, About)\n|-FoodList\n|-PicnicBasket\n  |-FoodItem\n    |-LikesDislikes\n|-AddFood\n  |-FormInput\n  |-EmojiSelector\n*/\n\nfunction App() {\n  const [foods, setFoods] = useState(false)\n  const [clickedVotes, setClickedVotes] = useState([])\n\n  const likedFoods = foods ? foods.filter(food => clickedVotes.includes(`${food.id}`+\"yum\")) : null;\n  \n\n  //fetch to get initial set of foods data\n  useEffect(()=>{\n    fetch(\"https://phase-2-lunchbox-data.onrender.com/foods\")\n    .then(resp=>resp.json())\n    .then(data=>setFoods(data))\n  },[])\n\n  //fetch to post new food to database + update PicnicBasket FoodItems + FoodList via state\n  function handleFormSubmit(newFoodObj){\n    fetch(\"https://phase-2-lunchbox-data.onrender.com/foods\",{\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(newFoodObj)\n    })\n    .then(resp=>resp.json())\n    .then(data=>setFoods([...foods, data]))\n  }\n\n   //Makes patch request to update likes/dislikes in database as well as state\n   function handleVote(foodId, patchedFoodObj, upOrDown){\n     fetch(`https://phase-2-lunchbox-data.onrender.com/foods/${foodId}`,{\n         method: \"PATCH\",\n         headers: {\n             \"Content-type\": \"application/json\"\n         },\n         body: JSON.stringify(patchedFoodObj)\n     })\n     .then(r=>r.json())\n     .then(data=>{\n      const patchedFoods = foods.map(food => food.id === foodId ? data : food)\n      setFoods(patchedFoods);\n      //Uses a state controlled array held in App to determine whether \"Yum!\" and \"Ew!\" buttons have been clicked already so they don't re-render when PicnicBasket becomes unmounted then mounted again (need to refresh the page to reset clicked values)\n      const voteClickedAlready = clickedVotes.includes(foodId+upOrDown);\n      const filteredVotes = clickedVotes.filter(vote => vote !== foodId+upOrDown)\n      setClickedVotes(voteClickedAlready ? filteredVotes : [...clickedVotes, foodId+upOrDown])\n\n      console.log(likedFoods)\n     })\n     \n }\n\n  //JSX to bundle components into App + provide routing for individual pages\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Switch>\n        <Route path=\"/addfood\">\n          <AddFood onFormSubmit={handleFormSubmit}/>\n        </Route>\n        <Route path=\"/foodlist\">\n          <FoodList foods={foods}/>\n        </Route>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route exact path=\"/\">\n         <PicnicBasket foods={foods} onVote={handleVote} clickedVotes={clickedVotes} />\n        </Route>\n        <Route path=\"*\">\n          <h2>404 not found</h2>\n        </Route>\n        <Route path=\"/pizza\"/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}