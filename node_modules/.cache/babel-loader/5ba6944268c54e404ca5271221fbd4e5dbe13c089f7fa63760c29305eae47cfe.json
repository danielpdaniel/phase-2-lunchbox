{"ast":null,"code":"var _jsxFileName = \"/Users/jimquinn/Development/code/phase-2/phaseTwoProject/phase-2-lunchbox/src/components/NewFoodInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewFoodInput(_ref) {\n  _s();\n  let {\n    onFormSubmit\n  } = _ref;\n  //new food obj for POST to db.json\n  // const [newFood, setNewFood] = useState(\"\");\n\n  //state variables for controlled inputs\n  const [foodName, setFoodName] = useState(\"\");\n  const [foodCity, setFoodCity] = useState(\"\");\n  const [foodCountry, setFoodCountry] = useState(\"\");\n  const [foodStory, setFoodStory] = useState(\"\");\n  const [btnClassName, setBtnClassName] = useState(null);\n  function foodItemCapitalization(textInput) {\n    const inputWords = textInput.split(\" \");\n    const capCasedWordsArr = inputWords.map(word => word[0].toUpperCase() + word.substr(1));\n    const capCasedWords = capCasedWordsArr.join(\" \");\n    return capCasedWords;\n  }\n  function handleChange(e) {\n    switch (e.target.name) {\n      case \"name\":\n        setFoodName(e.target.value);\n        break;\n      case \"city\":\n        setFoodCity(e.target.value);\n        break;\n      case \"country\":\n        setFoodCountry(e.target.value);\n        break;\n      case \"story\":\n        setFoodStory(e.target.value);\n        break;\n      default:\n        console.log(\"hmmm\");\n    }\n  }\n  function clearForm() {\n    setFoodName(\"\");\n    setFoodCity(\"\");\n    setFoodCountry(\"\");\n    setFoodStory(\"\");\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    /*Capitalizes first letter of Name, City, and Country and makes country inputs w value of \"united states\"=> \"U.S.A.\" */\n    const capCasedName = foodName ? foodItemCapitalization(foodName) : null;\n    const capCasedCity = foodCity ? foodItemCapitalization(foodCity) : null;\n    const capCasedCountry = foodCountry ? foodCountry.toUpperCase().includes(\"UNITED STATES\") ? \"U.S.A.\" : foodItemCapitalization(foodCountry) : null;\n    const newFoodObj = {\n      \"name\": capCasedName,\n      \"origin\": `${capCasedCity}, ${capCasedCountry}`,\n      \"story\": foodStory\n    };\n\n    /*no capcasing or U.S.A. replacement */\n    // const newFoodObj = {\n    //             \"name\": foodName,\n    //             \"origin\": `${foodCity}, ${foodCountry}`,\n    //             \"image\": foodImg,\n    //             \"imageAlt\": imgAlt,\n    //             \"story\": foodStory\n    //         }\n\n    if (foodName.length === 0) {\n      alert(\"Food name required!\");\n    } else if (foodCity.length === 0) {\n      alert(\"City name required!\");\n    } else if (foodCountry.length === 0) {\n      alert(\"Country name required!\");\n    } else if (foodStory.length === 0) {\n      alert(\"Food story required!\");\n    } else {\n      onFormSubmit(newFoodObj);\n      clearForm();\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"newFoodFormContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" What Are You Bringing to Our Lil Picnic? \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"what's a food that reminds you of home? Tell us about it below!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"newFoodForm\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\" What's this food called?\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Food Name\",\n          onChange: handleChange,\n          value: foodName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Where did you eat this food?\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"city\",\n          placeholder: \"City\",\n          onChange: handleChange,\n          value: foodCity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"country\",\n          placeholder: \"Country\",\n          onChange: handleChange,\n          value: foodCountry\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Is there an emoji for this food?\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"emojiSelect\",\n          children: emojiArray.map(emoji => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: emoji\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 44\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"A Fond Memory of This Food:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"textArea\",\n          name: \"story\",\n          placeholder: \"tell us a story...\",\n          onChange: handleChange,\n          value: foodStory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        name: \"submit\",\n        value: \"Add Food!\",\n        onMouseDown: () => setBtnClassName(\"clicked\"),\n        onMouseUp: () => setBtnClassName(null),\n        className: btnClassName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n_s(NewFoodInput, \"ZN/tsTmcTwL6cV5kQG7Zivxqd+g=\");\n_c = NewFoodInput;\nexport default NewFoodInput;\nvar _c;\n$RefreshReg$(_c, \"NewFoodInput\");","map":{"version":3,"names":["React","useState","NewFoodInput","onFormSubmit","foodName","setFoodName","foodCity","setFoodCity","foodCountry","setFoodCountry","foodStory","setFoodStory","btnClassName","setBtnClassName","foodItemCapitalization","textInput","inputWords","split","capCasedWordsArr","map","word","toUpperCase","substr","capCasedWords","join","handleChange","e","target","name","value","console","log","clearForm","handleSubmit","preventDefault","capCasedName","capCasedCity","capCasedCountry","includes","newFoodObj","length","alert","emojiArray","emoji"],"sources":["/Users/jimquinn/Development/code/phase-2/phaseTwoProject/phase-2-lunchbox/src/components/NewFoodInput.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction NewFoodInput({ onFormSubmit }){\n    //new food obj for POST to db.json\n    // const [newFood, setNewFood] = useState(\"\");\n    \n    //state variables for controlled inputs\n    const [foodName, setFoodName] = useState(\"\");\n    const [foodCity, setFoodCity] = useState(\"\");\n    const [foodCountry, setFoodCountry] = useState(\"\");\n    const [foodStory, setFoodStory] = useState(\"\");\n\n\n    const [btnClassName, setBtnClassName] = useState(null);\n\n    function foodItemCapitalization(textInput){\n        const inputWords = textInput.split(\" \");\n        const capCasedWordsArr = inputWords.map(word => word[0].toUpperCase() + word.substr(1));\n        const capCasedWords = capCasedWordsArr.join(\" \")\n        return capCasedWords\n        \n    }\n\n    function handleChange(e){\n       \n        switch(e.target.name){\n            case \"name\":\n                setFoodName(e.target.value);\n                break;\n            case \"city\":\n                setFoodCity(e.target.value);\n                break;\n            case \"country\":\n                setFoodCountry(e.target.value);\n                break;\n            case \"story\":\n                setFoodStory(e.target.value);\n                break;\n            default:\n                console.log(\"hmmm\")\n        }\n    }\n\n    function clearForm(){\n        setFoodName(\"\");\n        setFoodCity(\"\");\n        setFoodCountry(\"\");\n       \n        setFoodStory(\"\");\n        \n    }\n\n    function handleSubmit(e){\n        e.preventDefault()\n        \n        /*Capitalizes first letter of Name, City, and Country and makes country inputs w value of \"united states\"=> \"U.S.A.\" */\n        const capCasedName = foodName ? foodItemCapitalization(foodName) : null;\n        const capCasedCity = foodCity ? foodItemCapitalization(foodCity) : null;\n        const capCasedCountry = \n        foodCountry ? \n        foodCountry.toUpperCase().includes(\"UNITED STATES\") ? \"U.S.A.\" : foodItemCapitalization(foodCountry)\n         : null;\n        \n       const newFoodObj = {\n            \"name\": capCasedName,\n            \"origin\": `${capCasedCity}, ${capCasedCountry}`,\n            \"story\": foodStory\n        }\n\n    /*no capcasing or U.S.A. replacement */\n    // const newFoodObj = {\n    //             \"name\": foodName,\n    //             \"origin\": `${foodCity}, ${foodCountry}`,\n    //             \"image\": foodImg,\n    //             \"imageAlt\": imgAlt,\n    //             \"story\": foodStory\n    //         }\n\n        if(foodName.length === 0){\n            alert(\"Food name required!\")\n        }else if(foodCity.length === 0){\n            alert(\"City name required!\")\n        }else if (foodCountry.length === 0){\n            alert(\"Country name required!\")\n        }else if(foodStory.length === 0){\n            alert(\"Food story required!\")\n        }else{\n        onFormSubmit(newFoodObj);\n        clearForm();\n        }\n    }\n\n    return (\n        <div className=\"newFoodFormContainer\">\n        <h2> What Are You Bringing to Our Lil Picnic? </h2>\n        <h3>what's a food that reminds you of home? Tell us about it below!</h3>\n        <form className=\"newFoodForm\" onSubmit={handleSubmit}>\n            <label> What's this food called? \n                <input type=\"text\" name=\"name\" placeholder=\"Food Name\" onChange={handleChange} value={foodName}/>\n            </label>\n            <label>Where did you eat this food?\n                <input type=\"text\" name=\"city\" placeholder=\"City\" onChange={handleChange} value={foodCity}/>\n                <input type=\"text\" name=\"country\" placeholder=\"Country\" onChange={handleChange} value={foodCountry}/>\n            </label>\n            <label>Is there an emoji for this food?\n                <select name=\"emojiSelect\">\n                    {emojiArray.map(emoji=><option>{emoji}</option>)}\n                </select>\n            </label>\n            <label>A Fond Memory of This Food:\n                <textarea type=\"textArea\" name=\"story\" placeholder=\"tell us a story...\" onChange={handleChange} value={foodStory}/>\n            </label>\n                <input type=\"submit\" name=\"submit\" value=\"Add Food!\" onMouseDown={()=>setBtnClassName(\"clicked\")} onMouseUp={()=>setBtnClassName(null)} className={btnClassName}/>\n        </form>\n        </div>\n    )\n}\n\nexport default NewFoodInput;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,SAASC,YAAY,OAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAa,CAAC;EAClC;EACA;;EAEA;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAG9C,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEtD,SAASa,sBAAsB,CAACC,SAAS,EAAC;IACtC,MAAMC,UAAU,GAAGD,SAAS,CAACE,KAAK,CAAC,GAAG,CAAC;IACvC,MAAMC,gBAAgB,GAAGF,UAAU,CAACG,GAAG,CAACC,IAAI,IAAIA,IAAI,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC,CAAC;IACvF,MAAMC,aAAa,GAAGL,gBAAgB,CAACM,IAAI,CAAC,GAAG,CAAC;IAChD,OAAOD,aAAa;EAExB;EAEA,SAASE,YAAY,CAACC,CAAC,EAAC;IAEpB,QAAOA,CAAC,CAACC,MAAM,CAACC,IAAI;MAChB,KAAK,MAAM;QACPvB,WAAW,CAACqB,CAAC,CAACC,MAAM,CAACE,KAAK,CAAC;QAC3B;MACJ,KAAK,MAAM;QACPtB,WAAW,CAACmB,CAAC,CAACC,MAAM,CAACE,KAAK,CAAC;QAC3B;MACJ,KAAK,SAAS;QACVpB,cAAc,CAACiB,CAAC,CAACC,MAAM,CAACE,KAAK,CAAC;QAC9B;MACJ,KAAK,OAAO;QACRlB,YAAY,CAACe,CAAC,CAACC,MAAM,CAACE,KAAK,CAAC;QAC5B;MACJ;QACIC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IAAA;EAE/B;EAEA,SAASC,SAAS,GAAE;IAChB3B,WAAW,CAAC,EAAE,CAAC;IACfE,WAAW,CAAC,EAAE,CAAC;IACfE,cAAc,CAAC,EAAE,CAAC;IAElBE,YAAY,CAAC,EAAE,CAAC;EAEpB;EAEA,SAASsB,YAAY,CAACP,CAAC,EAAC;IACpBA,CAAC,CAACQ,cAAc,EAAE;;IAElB;IACA,MAAMC,YAAY,GAAG/B,QAAQ,GAAGU,sBAAsB,CAACV,QAAQ,CAAC,GAAG,IAAI;IACvE,MAAMgC,YAAY,GAAG9B,QAAQ,GAAGQ,sBAAsB,CAACR,QAAQ,CAAC,GAAG,IAAI;IACvE,MAAM+B,eAAe,GACrB7B,WAAW,GACXA,WAAW,CAACa,WAAW,EAAE,CAACiB,QAAQ,CAAC,eAAe,CAAC,GAAG,QAAQ,GAAGxB,sBAAsB,CAACN,WAAW,CAAC,GACjG,IAAI;IAER,MAAM+B,UAAU,GAAG;MACd,MAAM,EAAEJ,YAAY;MACpB,QAAQ,EAAG,GAAEC,YAAa,KAAIC,eAAgB,EAAC;MAC/C,OAAO,EAAE3B;IACb,CAAC;;IAEL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEI,IAAGN,QAAQ,CAACoC,MAAM,KAAK,CAAC,EAAC;MACrBC,KAAK,CAAC,qBAAqB,CAAC;IAChC,CAAC,MAAK,IAAGnC,QAAQ,CAACkC,MAAM,KAAK,CAAC,EAAC;MAC3BC,KAAK,CAAC,qBAAqB,CAAC;IAChC,CAAC,MAAK,IAAIjC,WAAW,CAACgC,MAAM,KAAK,CAAC,EAAC;MAC/BC,KAAK,CAAC,wBAAwB,CAAC;IACnC,CAAC,MAAK,IAAG/B,SAAS,CAAC8B,MAAM,KAAK,CAAC,EAAC;MAC5BC,KAAK,CAAC,sBAAsB,CAAC;IACjC,CAAC,MAAI;MACLtC,YAAY,CAACoC,UAAU,CAAC;MACxBP,SAAS,EAAE;IACX;EACJ;EAEA,oBACI;IAAK,SAAS,EAAC,sBAAsB;IAAA,wBACrC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmD,eACnD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAwE,eACxE;MAAM,SAAS,EAAC,aAAa;MAAC,QAAQ,EAAEC,YAAa;MAAA,wBACjD;QAAA,qDACI;UAAO,IAAI,EAAC,MAAM;UAAC,IAAI,EAAC,MAAM;UAAC,WAAW,EAAC,WAAW;UAAC,QAAQ,EAAER,YAAa;UAAC,KAAK,EAAErB;QAAS;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QAC7F,eACR;QAAA,wDACI;UAAO,IAAI,EAAC,MAAM;UAAC,IAAI,EAAC,MAAM;UAAC,WAAW,EAAC,MAAM;UAAC,QAAQ,EAAEqB,YAAa;UAAC,KAAK,EAAEnB;QAAS;UAAA;UAAA;UAAA;QAAA,QAAE,eAC5F;UAAO,IAAI,EAAC,MAAM;UAAC,IAAI,EAAC,SAAS;UAAC,WAAW,EAAC,SAAS;UAAC,QAAQ,EAAEmB,YAAa;UAAC,KAAK,EAAEjB;QAAY;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QACjG,eACR;QAAA,4DACI;UAAQ,IAAI,EAAC,aAAa;UAAA,UACrBkC,UAAU,CAACvB,GAAG,CAACwB,KAAK,iBAAE;YAAA,UAASA;UAAK;YAAA;YAAA;YAAA;UAAA,QAAU;QAAC;UAAA;UAAA;UAAA;QAAA,QAC3C;MAAA;QAAA;QAAA;QAAA;MAAA,QACL,eACR;QAAA,uDACI;UAAU,IAAI,EAAC,UAAU;UAAC,IAAI,EAAC,OAAO;UAAC,WAAW,EAAC,oBAAoB;UAAC,QAAQ,EAAElB,YAAa;UAAC,KAAK,EAAEf;QAAU;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QAC/G,eACJ;QAAO,IAAI,EAAC,QAAQ;QAAC,IAAI,EAAC,QAAQ;QAAC,KAAK,EAAC,WAAW;QAAC,WAAW,EAAE,MAAIG,eAAe,CAAC,SAAS,CAAE;QAAC,SAAS,EAAE,MAAIA,eAAe,CAAC,IAAI,CAAE;QAAC,SAAS,EAAED;MAAa;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QACnK;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEd;AAAC,GAlHQV,YAAY;AAAA,KAAZA,YAAY;AAoHrB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}