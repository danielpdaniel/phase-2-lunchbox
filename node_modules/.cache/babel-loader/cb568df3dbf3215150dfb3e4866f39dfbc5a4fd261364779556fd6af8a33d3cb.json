{"ast":null,"code":"var _jsxFileName = \"/Users/jimquinn/Development/code/phase-2/phaseTwoProject/phase-2-lunchbox/src/components/AddFood.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport FormInput from \"./FormInput\";\nimport EmojiSelector from \"./EmojiSelector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddFood(_ref) {\n  _s();\n  let {\n    onFormSubmit\n  } = _ref;\n  //state variables for controlled inputs:\n  const [foodName, setFoodName] = useState(\"\");\n  const [foodCity, setFoodCity] = useState(\"\");\n  const [foodCountry, setFoodCountry] = useState(\"\");\n  const [foodStory, setFoodStory] = useState(\"\");\n  const [foodEmoji, setFoodEmoji] = useState(\"\");\n  //for styling:\n  const [btnClassName, setBtnClassName] = useState(null);\n\n  //functions to handle user input and submissions:\n  function foodItemCapitalization(textInput) {\n    const inputWords = textInput.split(\" \");\n    const capCasedWordsArr = inputWords.map(word => word[0].toUpperCase() + word.substr(1));\n    const capCasedWords = capCasedWordsArr.join(\" \");\n    return capCasedWords;\n  }\n\n  //Handles form change by dynamically updating state values\n  function handleChange(e) {\n    switch (e.target.name) {\n      case \"name\":\n        setFoodName(e.target.value);\n        if (foodName.length > 28) {\n          alert(\"Max Food Name Length Exceeded!\");\n        }\n        break;\n      case \"city\":\n        setFoodCity(e.target.value);\n        break;\n      case \"country\":\n        setFoodCountry(e.target.value);\n        break;\n      case \"emojiSelect\":\n        setFoodEmoji(e.target.value);\n        break;\n      case \"story\":\n        setFoodStory(e.target.value);\n        break;\n      default:\n        console.log(\"no input found\");\n    }\n  }\n\n  //sets state values to \"\" to clear form\n  function clearForm() {\n    setFoodName(\"\");\n    setFoodCity(\"\");\n    setFoodCountry(\"\");\n    setFoodEmoji(\"\");\n    setFoodStory(\"\");\n  }\n\n  //Conditionally sends form data via callback fn to App handleFormSubmit() to make post requst for new food\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    //Capitalizes first letter of Name, City, and Country, makes country inputs w value of \"united states\"=> \"U.S.A.\"\n    const capCasedName = foodName ? foodItemCapitalization(foodName) : null;\n    const capCasedCity = foodCity ? foodItemCapitalization(foodCity) : null;\n    const capCasedCountry = foodCountry ? foodCountry.toUpperCase().includes(\"UNITED STATES\") ? \"U.S.A.\" : foodItemCapitalization(foodCountry) : null;\n\n    //Data to be sent in post request\n    const newFoodObj = {\n      \"name\": capCasedName,\n      \"origin\": `${capCasedCity}, ${capCasedCountry}`,\n      \"emoji\": foodEmoji === \"Select Emoji...\" ? \"🍽\" : foodEmoji,\n      \"story\": foodStory,\n      \"yums\": 0,\n      \"ews\": 0\n    };\n\n    //alerts if empty input fields, submits if all have entries\n    if (foodName.length === 0) {\n      alert(\"Food name required!\");\n    } else if (foodCity.length === 0) {\n      alert(\"City name required!\");\n    } else if (foodCountry.length === 0) {\n      alert(\"Country name required!\");\n    } else if (foodStory.length === 0) {\n      alert(\"Food story required!\");\n    } else {\n      onFormSubmit(newFoodObj);\n      clearForm();\n    }\n  }\n\n  //Renders form to gather new food submission data, includes FormInput and EmojiSelector components\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"newFoodFormContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" What Are You Bringing to Our Lil' Picnic? \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"What's a food that's near and dear to you? Tell us about it below!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"newFoodForm\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"name\",\n        label: \"What's this food called?\",\n        value: foodName,\n        placeholder: \"Food Name\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"city\",\n        label: \"Where did you eat this food?\",\n        value: foodCity,\n        placeholder: \"City\",\n        onChange: handleChange,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"country\",\n          placeholder: \"Country\",\n          onChange: handleChange,\n          value: foodCountry\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EmojiSelector, {\n        onChange: handleChange,\n        foodEmoji: foodEmoji\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), foodEmoji ? /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: foodEmoji\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 26\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"A Fond Memory of This Food:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"textArea\",\n          name: \"story\",\n          placeholder: \"tell us a story...\",\n          onChange: handleChange,\n          value: foodStory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        name: \"submit\",\n        value: \"Add Food!\",\n        onMouseDown: () => setBtnClassName(\"clicked\"),\n        onMouseUp: () => setBtnClassName(null),\n        className: btnClassName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(AddFood, \"GOcPb1YLBXSFgJB1SRlTI7dpgok=\");\n_c = AddFood;\nexport default AddFood;\nvar _c;\n$RefreshReg$(_c, \"AddFood\");","map":{"version":3,"names":["React","useState","FormInput","EmojiSelector","AddFood","onFormSubmit","foodName","setFoodName","foodCity","setFoodCity","foodCountry","setFoodCountry","foodStory","setFoodStory","foodEmoji","setFoodEmoji","btnClassName","setBtnClassName","foodItemCapitalization","textInput","inputWords","split","capCasedWordsArr","map","word","toUpperCase","substr","capCasedWords","join","handleChange","e","target","name","value","length","alert","console","log","clearForm","handleSubmit","preventDefault","capCasedName","capCasedCity","capCasedCountry","includes","newFoodObj"],"sources":["/Users/jimquinn/Development/code/phase-2/phaseTwoProject/phase-2-lunchbox/src/components/AddFood.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport FormInput from \"./FormInput\";\nimport EmojiSelector from \"./EmojiSelector\";\n\nfunction AddFood({ onFormSubmit }){\n    \n    //state variables for controlled inputs:\n    const [foodName, setFoodName] = useState(\"\");\n    const [foodCity, setFoodCity] = useState(\"\");\n    const [foodCountry, setFoodCountry] = useState(\"\");\n    const [foodStory, setFoodStory] = useState(\"\");\n    const [foodEmoji, setFoodEmoji] = useState(\"\");\n    //for styling:\n    const [btnClassName, setBtnClassName] = useState(null);\n\n    //functions to handle user input and submissions:\n    function foodItemCapitalization(textInput){\n        const inputWords = textInput.split(\" \");\n        const capCasedWordsArr = inputWords.map(word => word[0].toUpperCase() + word.substr(1));\n        const capCasedWords = capCasedWordsArr.join(\" \")\n        return capCasedWords\n    }\n\n    //Handles form change by dynamically updating state values\n    function handleChange(e){\n        switch(e.target.name){\n            case \"name\":\n                setFoodName(e.target.value);\n                if(foodName.length > 28){\n                    alert(\"Max Food Name Length Exceeded!\")\n                }\n                break;\n            case \"city\":\n                setFoodCity(e.target.value);\n                break;\n            case \"country\":\n                setFoodCountry(e.target.value);\n                break;\n            case \"emojiSelect\":\n                setFoodEmoji(e.target.value);\n                break;\n            case \"story\":\n                setFoodStory(e.target.value);\n                break;\n            default:\n                console.log(\"no input found\")\n        }\n    }\n\n    //sets state values to \"\" to clear form\n    function clearForm(){\n        setFoodName(\"\");\n        setFoodCity(\"\");\n        setFoodCountry(\"\");\n        setFoodEmoji(\"\")\n        setFoodStory(\"\");\n    }\n\n    //Conditionally sends form data via callback fn to App handleFormSubmit() to make post requst for new food\n    function handleSubmit(e){\n        e.preventDefault()\n        \n        //Capitalizes first letter of Name, City, and Country, makes country inputs w value of \"united states\"=> \"U.S.A.\"\n        const capCasedName = foodName ? foodItemCapitalization(foodName) : null;\n        const capCasedCity = foodCity ? foodItemCapitalization(foodCity) : null;\n        const capCasedCountry = \n        foodCountry ? \n        foodCountry.toUpperCase().includes(\"UNITED STATES\") ? \"U.S.A.\" : foodItemCapitalization(foodCountry)\n         : null;\n        \n        //Data to be sent in post request\n       const newFoodObj = {\n            \"name\": capCasedName,\n            \"origin\": `${capCasedCity}, ${capCasedCountry}`,\n            \"emoji\": foodEmoji === \"Select Emoji...\" ? \"🍽\" : foodEmoji,\n            \"story\": foodStory,\n            \"yums\": 0,\n            \"ews\": 0\n        }\n\n        //alerts if empty input fields, submits if all have entries\n        if(foodName.length === 0){\n            alert(\"Food name required!\")\n        }else if(foodCity.length === 0){\n            alert(\"City name required!\")\n        }else if (foodCountry.length === 0){\n            alert(\"Country name required!\")\n        }else if(foodStory.length === 0){\n            alert(\"Food story required!\")\n        }else{\n        onFormSubmit(newFoodObj);\n        clearForm();\n        }\n    }\n\n    //Renders form to gather new food submission data, includes FormInput and EmojiSelector components\n    return (\n    <div className=\"newFoodFormContainer\">\n        <h2> What Are You Bringing to Our Lil' Picnic? </h2>\n        <h3>What's a food that's near and dear to you? Tell us about it below!</h3>\n\n        <form className=\"newFoodForm\" onSubmit={handleSubmit}>\n            <FormInput name=\"name\" label=\"What's this food called?\" value={foodName} placeholder=\"Food Name\" onChange={handleChange}/>\n            <FormInput name=\"city\" label=\"Where did you eat this food?\" value={foodCity} placeholder=\"City\" onChange={handleChange}>\n                <input type=\"text\" name=\"country\" placeholder=\"Country\" onChange={handleChange} value={foodCountry}/>\n            </FormInput>\n            <EmojiSelector onChange={handleChange} foodEmoji={foodEmoji}/>\n            {foodEmoji ? <h6>{foodEmoji}</h6> : null}\n            <label>A Fond Memory of This Food:\n                <textarea type=\"textArea\" name=\"story\" placeholder=\"tell us a story...\" onChange={handleChange} value={foodStory}/>\n            </label>\n            <input type=\"submit\" name=\"submit\" value=\"Add Food!\" onMouseDown={()=>setBtnClassName(\"clicked\")} onMouseUp={()=>setBtnClassName(null)} className={btnClassName}/>\n        </form>\n     </div>\n    )\n}\n\nexport default AddFood;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}