[{"/Users/jimquinn/Development/code/phase-2/phaseTwoProject/phase-2-lunchbox/src/index.js":"1","/Users/jimquinn/Development/code/phase-2/phaseTwoProject/phase-2-lunchbox/src/components/App.js":"2","/Users/jimquinn/Development/code/phase-2/phaseTwoProject/phase-2-lunchbox/src/components/NavBar.js":"3","/Users/jimquinn/Development/code/phase-2/phaseTwoProject/phase-2-lunchbox/src/components/NewFoodInput.js":"4","/Users/jimquinn/Development/code/phase-2/phaseTwoProject/phase-2-lunchbox/src/components/FoodItem.js":"5","/Users/jimquinn/Development/code/phase-2/phaseTwoProject/phase-2-lunchbox/src/components/FoodList.js":"6","/Users/jimquinn/Development/code/phase-2/phaseTwoProject/phase-2-lunchbox/src/components/PicnicBasket.js":"7","/Users/jimquinn/Development/code/phase-2/phaseTwoProject/phase-2-lunchbox/src/components/About.js":"8"},{"size":269,"mtime":1667856395102,"results":"9","hashOfConfig":"10"},{"size":1563,"mtime":1668117200785,"results":"11","hashOfConfig":"10"},{"size":372,"mtime":1667862958346,"results":"12","hashOfConfig":"10"},{"size":5051,"mtime":1668099640524,"results":"13","hashOfConfig":"10"},{"size":894,"mtime":1668063346074,"results":"14","hashOfConfig":"10"},{"size":613,"mtime":1668114758255,"results":"15","hashOfConfig":"10"},{"size":504,"mtime":1668099674844,"results":"16","hashOfConfig":"10"},{"size":599,"mtime":1668022973824,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"r4lith",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jimquinn/Development/code/phase-2/phaseTwoProject/phase-2-lunchbox/src/index.js",[],[],"/Users/jimquinn/Development/code/phase-2/phaseTwoProject/phase-2-lunchbox/src/components/App.js",[],[],"/Users/jimquinn/Development/code/phase-2/phaseTwoProject/phase-2-lunchbox/src/components/NavBar.js",[],[],"/Users/jimquinn/Development/code/phase-2/phaseTwoProject/phase-2-lunchbox/src/components/NewFoodInput.js",["44","45","46","47","48"],[],"import React, { useState } from \"react\";\n\nfunction NewFoodInput({ onFormSubmit }){\n    //new food obj to patch to db.json\n    const [newFood, setNewFood] = useState(\"\");\n    \n    //state variables for controlled inputs\n    const [foodName, setFoodName] = useState(\"\");\n    const [foodCity, setFoodCity] = useState(\"\");\n    const [foodCountry, setFoodCountry] = useState(\"\");\n    const [foodImg, setFoodImg] = useState(\"\");\n    const [imgAlt, setImgAlt] = useState(\"\");\n    const [foodStory, setFoodStory] = useState(\"\");\n\n    const [previewImage, setPreviewImage] = useState(false);\n\n    const [btnClassName, setBtnClassName] = useState(null);\n\n    function foodItemCapitalization(textInput){\n        const inputWords = textInput.split(\" \");\n        const capCasedWordsArr = inputWords.map(word => word[0].toUpperCase() + word.substr(1));\n        const capCasedWords = capCasedWordsArr.join(\" \")\n        return capCasedWords\n        // console.log(capCasedWords)\n    }\n\n    function handleChange(e){\n        const name = e.target.name\n        switch(e.target.name){\n            case \"name\":\n                setFoodName(e.target.value);\n                break;\n            case \"city\":\n                setFoodCity(e.target.value);\n                break;\n            case \"country\":\n                setFoodCountry(e.target.value);\n                break;\n            case \"image\":\n                setFoodImg(e.target.value);\n                setPreviewImage(e.target.value)\n                break;\n            case \"altText\":\n                setImgAlt(e.target.value);\n                break;\n            case \"story\":\n                setFoodStory(e.target.value);\n        }\n    // console.log(\"name:\", foodName, \"city:\", foodCity, \"country:\", foodCountry, \"image:\", foodImg, \"alt:\", imgAlt, \"story:\", foodStory)\n    }\n\n    function clearForm(){\n        setFoodName(\"\");\n        setFoodCity(\"\");\n        setFoodCountry(\"\");\n        setFoodImg(\"\");\n        setImgAlt(\"\");\n        setFoodStory(\"\");\n        setPreviewImage(false);\n    }\n\n    function handleSubmit(e){\n        e.preventDefault()\n        // console.log(\"submitted!\")\n        \n        const capCasedName = foodName ? foodItemCapitalization(foodName) : null;\n        const capCasedCity = foodCity ? foodItemCapitalization(foodCity) : null;\n        const capCasedCountry = \n        foodCountry ? \n        foodCountry.toUpperCase().includes(\"UNITED STATES\") ? \"U.S.A.\" : foodItemCapitalization(foodCountry)\n         : null;\n        \n       const newFoodObj = {\n            \"name\": capCasedName,\n            \"origin\": `${capCasedCity}, ${capCasedCountry}`,\n            \"image\": foodImg,\n            \"imageAlt\": imgAlt,\n            \"story\": foodStory\n        }\n        if(foodName.length === 0){\n            alert(\"Food name required!\")\n        }else if(foodCity.length === 0){\n            alert(\"City name required!\")\n        }else if (foodCountry.length === 0){\n            alert(\"Country name required!\")\n        }else if(foodImg.length === 0){\n            alert(\"Food Image Required!\")\n        }else if(imgAlt.length === 0){\n            alert(\"Image alt text required!\")\n        }else if(foodStory.length === 0){\n            alert(\"Food story required!\")\n        }else{\n        onFormSubmit(newFoodObj);\n        clearForm();\n        }\n    }\n\n    return (\n        <div className=\"newFoodFormContainer\">\n        <h2> What Are You Bringing to Our Lil Picnic? </h2>\n        <h3>what's a food that reminds you of home? Tell us about it below!</h3>\n        <form className=\"newFoodForm\" onSubmit={handleSubmit}>\n            <label> What's this food called? \n                <input type=\"text\" name=\"name\" placeholder=\"What's this food called?\" onChange={handleChange} value={foodName}/>\n            </label>\n            <label>Where did you eat this food?\n                <input type=\"text\" name=\"city\" placeholder=\"City?\" onChange={handleChange} value={foodCity}/>\n                <input type=\"text\" name=\"country\" placeholder=\"Country?\" onChange={handleChange} value={foodCountry}/>\n            </label>\n            <label>Image URL:\n                <input type=\"text\" name=\"image\" placeholder=\"image url\" onChange={handleChange} value={foodImg}/>\n                {previewImage ? \n                <p className=\"imgPreview\">Image Preview:\n                <img className=\"imgPreview\" src={previewImage}/> \n                </p>\n                : null}\n            </label>\n            <label>Image Alt Text\n                <input type=\"text\" name=\"altText\" placeholder=\"short image description\" onChange={handleChange} value={imgAlt}/>\n            </label>\n            <label>A Fond Memory of This Food:\n                <textarea type=\"textArea\" name=\"story\" placeholder=\"tell us a story...\" onChange={handleChange} value={foodStory}/>\n            </label>\n                <input type=\"submit\" name=\"submit\" value=\"Add Food!\" onMouseDown={()=>setBtnClassName(\"clicked\")} onMouseUp={()=>setBtnClassName(null)} className={btnClassName}/>\n        </form>\n        </div>\n    )\n}\n\nexport default NewFoodInput;",[],"/Users/jimquinn/Development/code/phase-2/phaseTwoProject/phase-2-lunchbox/src/components/FoodItem.js",[],[],"/Users/jimquinn/Development/code/phase-2/phaseTwoProject/phase-2-lunchbox/src/components/FoodList.js",[],[],"/Users/jimquinn/Development/code/phase-2/phaseTwoProject/phase-2-lunchbox/src/components/PicnicBasket.js",[],[],"/Users/jimquinn/Development/code/phase-2/phaseTwoProject/phase-2-lunchbox/src/components/About.js",[],[],{"ruleId":"49","severity":1,"message":"50","line":5,"column":12,"nodeType":"51","messageId":"52","endLine":5,"endColumn":19},{"ruleId":"49","severity":1,"message":"53","line":5,"column":21,"nodeType":"51","messageId":"52","endLine":5,"endColumn":31},{"ruleId":"49","severity":1,"message":"54","line":28,"column":15,"nodeType":"51","messageId":"52","endLine":28,"endColumn":19},{"ruleId":"55","severity":1,"message":"56","line":29,"column":9,"nodeType":"57","messageId":"58","endLine":48,"endColumn":10},{"ruleId":"59","severity":1,"message":"60","line":114,"column":17,"nodeType":"61","endLine":114,"endColumn":65},"no-unused-vars","'newFood' is assigned a value but never used.","Identifier","unusedVar","'setNewFood' is assigned a value but never used.","'name' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]